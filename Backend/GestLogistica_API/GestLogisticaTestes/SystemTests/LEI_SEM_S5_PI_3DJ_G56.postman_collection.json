{
	"info": {
		"_postman_id": "a7dcc796-d986-4b04-981d-f0beef08ffd9",
		"name": "LEI_SEM_S5_PI_3DJ_G56",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23425866"
	},
	"item": [
		{
			"name": "GEST_ARM",
			"item": [
				{
					"name": "Warehouse Entity",
					"item": [
						{
							"name": "Test_Case_One",
							"item": [
								{
									"name": "Post_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse\", responseJson.id);\r",
													"pm.collectionVariables.set(\"id_warehouse_domain\", responseJson.alphaNumId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_warehouse\"),\r",
													"    \"latitudeDegree\": 5,\r",
													"    \"latitudeSecond\": 5,\r",
													"    \"latitudeMinute\": 5,\r",
													"    \"longitudeDregree\": 5,\r",
													"    \"longitudeSecond\": 5,\r",
													"    \"longitudeMinute\": 5,\r",
													"    \"designation\": \"Ola\",\r",
													"    \"alphaNumId\": pm.collectionVariables.get(\"id_warehouse_domain\"),\r",
													"    \"street\": \"Street dos Coiso\",\r",
													"    \"doorNumber\": 5,\r",
													"    \"postalCode\": \"4000-999\",\r",
													"    \"city\": \"Famalicão\",\r",
													"    \"country\": \"Portugal\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/id?id={{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"id"
											],
											"query": [
												{
													"key": "id",
													"value": "{{id_warehouse}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\" : \"{{id_warehouse}}\",\r\n    \"AlphaNumId\" : \"{{id_warehouse_domain}}\",\r\n    \"LatitudeDegree\" : 3,\r\n    \"LatitudeMinute\" : 5,\r\n    \"LatitudeSecond\" : 4,\r\n    \"LongitudeDregree\" : 8,\r\n    \"LongitudeMinute\" : 6,\r\n    \"LongitudeSecond\" : 2,\r\n    \"Designation\" : \"armazenes\",\r\n    \"Street\" : \"street dos armazenes\",\r\n    \"DoorNumber\" : 123654,\r\n    \"PostalCode\" : \"4000-123\",\r\n    \"City\" : \"armazenes city\",\r\n    \"Country\" : \"armazenes country\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Two",
							"item": [
								{
									"name": "Post_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse\", responseJson.id);\r",
													"pm.collectionVariables.set(\"designation\", responseJson.designation);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_warehouse\"),\r",
													"    \"latitudeDegree\": 5,\r",
													"    \"latitudeSecond\": 5,\r",
													"    \"latitudeMinute\": 5,\r",
													"    \"longitudeDregree\": 5,\r",
													"    \"longitudeSecond\": 5,\r",
													"    \"longitudeMinute\": 5,\r",
													"    \"designation\": \"Ola\",\r",
													"    \"alphaNumId\": pm.collectionVariables.get(\"id_warehouse_domain\"),\r",
													"    \"street\": \"Street dos Coiso\",\r",
													"    \"doorNumber\": 5,\r",
													"    \"postalCode\": \"4000-999\",\r",
													"    \"city\": \"Famalicão\",\r",
													"    \"country\": \"Portugal\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_Designação",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/designation?designation={{designation}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"designation"
											],
											"query": [
												{
													"key": "designation",
													"value": "{{designation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\" : \"{{id_warehouse}}\",\r\n    \"AlphaNumId\" : \"{{id_warehouse_domain}}\",\r\n    \"LatitudeDegree\" : 3,\r\n    \"LatitudeMinute\" : 5,\r\n    \"LatitudeSecond\" : 4,\r\n    \"LongitudeDregree\" : 8,\r\n    \"LongitudeMinute\" : 6,\r\n    \"LongitudeSecond\" : 2,\r\n    \"Designation\" : \"armazenes\",\r\n    \"Street\" : \"street dos armazenes\",\r\n    \"DoorNumber\" : 123654,\r\n    \"PostalCode\" : \"4000-123\",\r\n    \"City\" : \"armazenes city\",\r\n    \"Country\" : \"armazenes country\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Three",
							"item": [
								{
									"name": "Post_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse\", responseJson.id);\r",
													"pm.collectionVariables.set(\"id_warehouse_domain\", responseJson.alphaNumId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_warehouse\"),\r",
													"    \"latitudeDegree\": 5,\r",
													"    \"latitudeSecond\": 5,\r",
													"    \"latitudeMinute\": 5,\r",
													"    \"longitudeDregree\": 5,\r",
													"    \"longitudeSecond\": 5,\r",
													"    \"longitudeMinute\": 5,\r",
													"    \"designation\": \"Ola\",\r",
													"    \"alphaNumId\": pm.collectionVariables.get(\"id_warehouse_domain\"),\r",
													"    \"street\": \"Street dos Coiso\",\r",
													"    \"doorNumber\": 5,\r",
													"    \"postalCode\": \"4000-999\",\r",
													"    \"city\": \"Famalicão\",\r",
													"    \"country\": \"Portugal\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_DomainID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/byAlphaId?warehouseId={{id_warehouse_domain}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"byAlphaId"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{id_warehouse_domain}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\" : \"{{id_warehouse}}\",\r\n    \"AlphaNumId\" : \"{{id_warehouse_domain}}\",\r\n    \"LatitudeDegree\" : 3,\r\n    \"LatitudeMinute\" : 5,\r\n    \"LatitudeSecond\" : 4,\r\n    \"LongitudeDregree\" : 8,\r\n    \"LongitudeMinute\" : 6,\r\n    \"LongitudeSecond\" : 2,\r\n    \"Designation\" : \"armazenes\",\r\n    \"Street\" : \"street dos armazenes\",\r\n    \"DoorNumber\" : 123654,\r\n    \"PostalCode\" : \"4000-123\",\r\n    \"City\" : \"armazenes city\",\r\n    \"Country\" : \"armazenes country\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Four",
							"item": [
								{
									"name": "Post_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse\", responseJson.id);\r",
													"pm.collectionVariables.set(\"id_warehouse_domain\", responseJson.alphaNumId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_warehouse\"),\r",
													"    \"latitudeDegree\": 5,\r",
													"    \"latitudeSecond\": 5,\r",
													"    \"latitudeMinute\": 5,\r",
													"    \"longitudeDregree\": 5,\r",
													"    \"longitudeSecond\": 5,\r",
													"    \"longitudeMinute\": 5,\r",
													"    \"designation\": \"Ola\",\r",
													"    \"alphaNumId\": pm.collectionVariables.get(\"id_warehouse_domain\"),\r",
													"    \"street\": \"Street dos Coiso\",\r",
													"    \"doorNumber\": 5,\r",
													"    \"postalCode\": \"4000-999\",\r",
													"    \"city\": \"Famalicão\",\r",
													"    \"country\": \"Portugal\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_All_Warehouses",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\" : \"{{id_warehouse}}\",\r\n    \"AlphaNumId\" : \"{{id_warehouse_domain}}\",\r\n    \"LatitudeDegree\" : 3,\r\n    \"LatitudeMinute\" : 5,\r\n    \"LatitudeSecond\" : 4,\r\n    \"LongitudeDregree\" : 8,\r\n    \"LongitudeMinute\" : 6,\r\n    \"LongitudeSecond\" : 2,\r\n    \"Designation\" : \"armazenes\",\r\n    \"Street\" : \"street dos armazenes\",\r\n    \"DoorNumber\" : 123654,\r\n    \"PostalCode\" : \"4000-123\",\r\n    \"City\" : \"armazenes city\",\r\n    \"Country\" : \"armazenes country\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Five_Fail_Case",
							"item": [
								{
									"name": "Post_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse\", responseJson.id);\r",
													"pm.collectionVariables.set(\"id_warehouse_domain\", responseJson.alphaNumId);\r",
													"\r",
													"pm.collectionVariables.set(\"id_warehouse_invalid\", \"59294c42-fff1-4b82-9cd6-43dd9c3f2b5d\");\r",
													"pm.collectionVariables.set(\"id_warehouse_domain_invalido\", \"000\");\r",
													"pm.collectionVariables.set(\"designation_invalido\", \"11-11-2022\");\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_warehouse\"),\r",
													"    \"latitudeDegree\": 5,\r",
													"    \"latitudeSecond\": 5,\r",
													"    \"latitudeMinute\": 5,\r",
													"    \"longitudeDregree\": 5,\r",
													"    \"longitudeSecond\": 5,\r",
													"    \"longitudeMinute\": 5,\r",
													"    \"designation\": \"Ola\",\r",
													"    \"alphaNumId\": pm.collectionVariables.get(\"id_warehouse_domain\"),\r",
													"    \"street\": \"Street dos Coiso\",\r",
													"    \"doorNumber\": 5,\r",
													"    \"postalCode\": \"4000-999\",\r",
													"    \"city\": \"Famalicão\",\r",
													"    \"country\": \"Portugal\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_AlphaID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"There is already a warehouse with that alphaNumeric ID!\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L78\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_LatitudeDegree",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate degrees must be between 180 and -180\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L98\",\r\n    \"LatitudeDegree\" : \"-200\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_LatitudeSecond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate seconds must be between 0 and 60\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L98\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"-200\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse__Invalid_LatitudeMinute",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate minutes must be between 0 and 60\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"-500\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_LongitudeDregree",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate degrees must be between 180 and -180\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"-500\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_LongitudeSecond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate seconds must be between 0 and 60\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"-500\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_LongitudeMinute",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Coordinate minutes must be between 0 and 60\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"L99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"-500\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_Designation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Designation exceeds number of characters\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_Street",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Street cannot be empty\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_DoorNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Door number cannot be negative\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"-5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_PostalCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Postal code cannot be empty\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_City",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"City cannot be empty\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"\",\r\n    \"Country\": \"Portugal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Warehouse_Invalid_Country",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Country cannot be empty\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AlphaNumId\" : \"D99\",\r\n    \"LatitudeDegree\" : \"5\",\r\n    \"LatitudeSecond\": \"5\",\r\n    \"LatitudeMinute\": \"5\",\r\n    \"LongitudeDregree\": \"5\",\r\n    \"LongitudeSecond\": \"5\",\r\n    \"LongitudeMinute\": \"5\",\r\n    \"Designation\": \"Ola\",\r\n    \"Street\": \"Street dos Coiso\",\r\n    \"DoorNumber\": \"5\",\r\n    \"PostalCode\": \"4000-999\",\r\n    \"City\": \"Famalicão\",\r\n    \"Country\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_ID_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/id?id={{id_warehouse_invalid}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"id"
											],
											"query": [
												{
													"key": "id",
													"value": "{{id_warehouse_invalid}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_Designação_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/designation?designation={{designation_invalido}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"designation"
											],
											"query": [
												{
													"key": "designation",
													"value": "{{designation_invalido}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Warehouse_Por_DomainID_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/byAlphaId?warehouseId={{id_warehouse_domain_invalido}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"byAlphaId"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{id_warehouse_domain_invalido}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\" : \"{{id_warehouse}}\",\r\n    \"AlphaNumId\" : \"{{id_warehouse_domain}}\",\r\n    \"LatitudeDegree\" : 3,\r\n    \"LatitudeMinute\" : 5,\r\n    \"LatitudeSecond\" : 4,\r\n    \"LongitudeDregree\" : 8,\r\n    \"LongitudeMinute\" : 6,\r\n    \"LongitudeSecond\" : 2,\r\n    \"Designation\" : \"armazenes\",\r\n    \"Street\" : \"street dos armazenes\",\r\n    \"DoorNumber\" : 123654,\r\n    \"PostalCode\" : \"4000-123\",\r\n    \"City\" : \"armazenes city\",\r\n    \"Country\" : \"armazenes country\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Warehouse_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Warehouse/{{id_warehouse_invalid}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Warehouse",
												"{{id_warehouse_invalid}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Order Entity",
					"item": [
						{
							"name": "Test_Case_One",
							"item": [
								{
									"name": "Post_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.collectionVariables.set(\"id_order\", responseJson.id.value);\r",
													"pm.collectionVariables.set(\"identifier\", responseJson.identifier);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/27/2022 00:00:00\",\r",
													"    \"orderMass\": 200.0,\r",
													"    \"chargingTime\": 5.0,\r",
													"    \"unloadingTime\": 5.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"27-12-2022\",\r\n    \"OrderMass\": 200,\r\n    \"ChargingTime\": 5,\r\n    \"UnloadingTime\": 5,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Get With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/27/2022 00:00:00\",\r",
													"    \"orderMass\": 200.0,\r",
													"    \"chargingTime\": 5.0,\r",
													"    \"unloadingTime\": 5.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porId?id={{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porId"
											],
											"query": [
												{
													"key": "id",
													"value": "{{id_order}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_All_Orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"     \"orderDate\": \"12/28/2022 00:00:00\",\r",
													"    \"orderMass\": 200.0,\r",
													"    \"chargingTime\": 5.0,\r",
													"    \"unloadingTime\": 6.0,\r",
													"    \"warehouseId\": \"C15\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"28/12/2022\",\r\n    \"OrderMass\": \"200\",\r\n    \"WarehouseId\": \"C15\",\r\n    \"ChargingTime\": \"5\",\r\n    \"UnloadingTime\": \"6\",\r\n    \"OrderDomainId\": \"221227/4\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order/{{id_order}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/{{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Two",
							"item": [
								{
									"name": "Post_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.collectionVariables.set(\"id_order\", responseJson.id.value);\r",
													"pm.collectionVariables.set(\"data_order\", responseJson.orderDate);\r",
													"pm.collectionVariables.set(\"identifier\", responseJson.identifier);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/12/2022 00:00:00\",\r",
													"    \"orderMass\": 500.0,\r",
													"    \"chargingTime\": 10.0,\r",
													"    \"unloadingTime\": 20.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porData?data={{data_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porData"
											],
											"query": [
												{
													"key": "data",
													"value": "{{data_order}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/20/2022 00:00:00\",\r",
													"    \"orderMass\": 5000.0,\r",
													"    \"chargingTime\": 100.0,\r",
													"    \"unloadingTime\": 200.0,\r",
													"    \"warehouseId\": \"CZ7\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"20-12-2022\",\r\n    \"OrderMass\": 5000,\r\n    \"ChargingTime\": 100,\r\n    \"UnloadingTime\": 200,\r\n    \"WarehouseID\": \"CZ7\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order/{{id_order}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/{{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Three",
							"item": [
								{
									"name": "Post_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.collectionVariables.set(\"id_order\", responseJson.id.value);\r",
													"pm.collectionVariables.set(\"warehouseId\", responseJson.warehouseId);\r",
													"pm.collectionVariables.set(\"identifier\", responseJson.identifier);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/12/2022 00:00:00\",\r",
													"    \"orderMass\": 500.0,\r",
													"    \"chargingTime\": 10.0,\r",
													"    \"unloadingTime\": 20.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porWarehouseID?warehouseId={{warehouseId}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porWarehouseID"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{warehouseId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/20/2022 00:00:00\",\r",
													"    \"orderMass\": 5000.0,\r",
													"    \"chargingTime\": 100.0,\r",
													"    \"unloadingTime\": 200.0,\r",
													"    \"warehouseId\": \"CZ7\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"20-12-2022\",\r\n    \"OrderMass\": 5000,\r\n    \"ChargingTime\": 100,\r\n    \"UnloadingTime\": 200,\r\n    \"WarehouseID\": \"CZ7\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order/{{id_order}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/{{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Four",
							"item": [
								{
									"name": "Post_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.collectionVariables.set(\"id_order\", responseJson.id.value);\r",
													"pm.collectionVariables.set(\"identifier\", responseJson.identifier);\r",
													"pm.collectionVariables.set(\"data_order\", responseJson.orderDate);\r",
													"pm.collectionVariables.set(\"warehouseId\", responseJson.warehouseId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/12/2022 00:00:00\",\r",
													"    \"orderMass\": 500.0,\r",
													"    \"chargingTime\": 10.0,\r",
													"    \"unloadingTime\": 20.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Filtragem",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porFiltragem?warehouseId={{warehouseId}}&data={{data_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porFiltragem"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{warehouseId}}"
												},
												{
													"key": "data",
													"value": "{{data_order}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/20/2022 00:00:00\",\r",
													"    \"orderMass\": 5000.0,\r",
													"    \"chargingTime\": 100.0,\r",
													"    \"unloadingTime\": 200.0,\r",
													"    \"warehouseId\": \"CZ7\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"20-12-2022\",\r\n    \"OrderMass\": 5000,\r\n    \"ChargingTime\": 100,\r\n    \"UnloadingTime\": 200,\r\n    \"WarehouseID\": \"CZ7\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order/{{id_order}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/{{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Five_Fail_Case",
							"item": [
								{
									"name": "Post_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.collectionVariables.set(\"id_order\", responseJson.id.value);\r",
													"pm.collectionVariables.set(\"identifier\", responseJson.identifier);\r",
													"pm.collectionVariables.set(\"data_order\", responseJson.orderDate);\r",
													"pm.collectionVariables.set(\"warehouseId\", responseJson.warehouseId);\r",
													"\r",
													"pm.collectionVariables.set(\"id_order_invalid\", \"59294c42-d175-4b82-9cd6-43dd9c3f2b5d\");\r",
													"pm.collectionVariables.set(\"identifier_invalido\", \"221212/100\");\r",
													"pm.collectionVariables.set(\"data_order_invalido\", \"11-11-2022\");\r",
													"pm.collectionVariables.set(\"warehouseId_invalido\", \"ZZZ\");\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/12/2022 00:00:00\",\r",
													"    \"orderMass\": 500.0,\r",
													"    \"chargingTime\": 10.0,\r",
													"    \"unloadingTime\": 20.0,\r",
													"    \"warehouseId\": \"MA1\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Order_Invalid_OrderMass",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Mass needs to be higher than 0\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": -500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Order_Invalid_OrderDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Não foi possível adicionar o armazém! (Data inválida!)');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Order_Invalid_ChargingTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Order time cannot be negative!\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": -10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Order__Invalid_UnloadingTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"Order time cannot be negative!\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": -20,\r\n    \"WarehouseID\": \"MA1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Order_Invalid_WarehouseID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body({\r",
													"    \"message\": \"AlphaId exceeds character number\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"12-12-2022\",\r\n    \"OrderMass\": 500,\r\n    \"ChargingTime\": 10,\r\n    \"UnloadingTime\": 20,\r\n    \"WarehouseID\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porId?id={{id_order_invalid}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porId"
											],
											"query": [
												{
													"key": "id",
													"value": "{{id_order_invalid}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porData?data={{data_order_invalido}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porData"
											],
											"query": [
												{
													"key": "data",
													"value": "{{data_order_invalido}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porWarehouseID?warehouseId={{warehouseId_invalido}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porWarehouseID"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{warehouseId_invalido}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Order_By_Filtragem",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/porFiltragem?warehouseId={{warehouseId_invalido}}&data={{data_order_invalido}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"porFiltragem"
											],
											"query": [
												{
													"key": "warehouseId",
													"value": "{{warehouseId_invalido}}"
												},
												{
													"key": "data",
													"value": "{{data_order_invalido}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 450ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(450);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With Success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"     \"id\": {\r",
													"        \"value\": pm.collectionVariables.get(\"id_order\")\r",
													"    },\r",
													"    \"identifier\": pm.collectionVariables.get(\"identifier\"),\r",
													"    \"orderDate\": \"12/20/2022 00:00:00\",\r",
													"    \"orderMass\": 5000.0,\r",
													"    \"chargingTime\": 100.0,\r",
													"    \"unloadingTime\": 200.0,\r",
													"    \"warehouseId\": \"CZ7\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"OrderDate\": \"20-12-2022\",\r\n    \"OrderMass\": 5000,\r\n    \"ChargingTime\": 100,\r\n    \"UnloadingTime\": 200,\r\n    \"WarehouseID\": \"CZ7\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/api/Order/{{id_order}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://localhost:5001/api/Order/{{id_order}}",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"api",
												"Order",
												"{{id_order}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "GEST_LOG",
			"item": [
				{
					"name": "Camião Entity",
					"item": [
						{
							"name": "Test_Case_One",
							"item": [
								{
									"name": "Post_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"zzzzz\",\r\n    \"truckPlate\": \"CC-12-ZD\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\",\r\n    \"caractTruck\": \"{{carac_truck}}\",\r\n    \"truckPlate\": \"{{truckPlate}}\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_All_Trucks",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3000/api/trucks/all",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Two",
							"item": [
								{
									"name": "Post_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Truck_By_Plate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"        [\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"}\r",
													"        ]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"truckPlate\": \"{{truckPlate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks/plate",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks",
												"plate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\",\r\n    \"caractTruck\": \"{{carac_truck}}\",\r\n    \"truckPlate\": \"{{truckPlate}}\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Three",
							"item": [
								{
									"name": "Post_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Truck_By_TruckCaract",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"        [\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"}\r",
													"        ]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"{{carac_truck}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks/caract",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks",
												"caract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\",\r\n    \"caractTruck\": \"{{carac_truck}}\",\r\n    \"truckPlate\": \"{{truckPlate}}\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Four_Fail_Case",
							"item": [
								{
									"name": "Post_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck_invalid\", \"59294c42-fff1-4b82-9cd6-43dd9c3f2b5d\");\r",
													"pm.collectionVariables.set(\"carac_truck_invalid\", \"AAAAAAAAAAA\");\r",
													"pm.collectionVariables.set(\"truckPlate_invalid\", \"AAAAAAA\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_TruckCaract",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Error creating truck, check the repeated data\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_TruckPlate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Error creating truck, check the repeated data\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"000D9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_Tare",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Tare inválida, tem de ser um número positivo\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"-1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_WeightCapacity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Capacity de carga inválida, tem de ser um número positivo\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"-1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_CargaMax",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Carga máxima inválida, tem de ser um número positivo\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"-5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_Carga_Total",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Carga total inválida, tem de ser um número positivo\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"-2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Truck_Invalid_ChargingTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_truck\", responseJson.domainId);\r",
													"pm.collectionVariables.set(\"carac_truck\", responseJson.caractTruck);\r",
													"pm.collectionVariables.set(\"truckPlate\", responseJson.truckPlate);\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Time de carregamento inválido, tem de ser um número positivo\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"D0ZD9\",\r\n    \"truckPlate\": \"DA-32-ZZ\",\r\n    \"weightCapacity\": \"1250\",\r\n    \"cargaMax\": \"5000\",\r\n    \"totalBatCharge\": \"2500\",\r\n    \"tare\": \"1500\",\r\n    \"chargingTime\": \"-25\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Truck_By_Plate_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"        [\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"}\r",
													"        ]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"truckPlate\": \"{{truckPlate_invalid}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks/plate",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks",
												"plate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Truck_By_TruckCaract_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"        [\r",
													"{\r",
													"    \"domainId\": pm.collectionVariables.get(\"id_truck\"),\r",
													"    \"caractTruck\": pm.collectionVariables.get(\"carac_truck\"),\r",
													"    \"truckPlate\":  pm.collectionVariables.get(\"truckPlate\"),\r",
													"    \"tare\": 1500,\r",
													"    \"weightCapacity\": 1250,\r",
													"    \"cargaMax\": 5000,\r",
													"    \"totalBatCharge\": 2500,\r",
													"    \"chargingTime\": 25\r",
													"}\r",
													"        ]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"caractTruck\": \"{{carac_truck_invalid}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks/caract",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks",
												"caract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Truck_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck_invalid}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"domainId\": \"{{id_truck}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/trucks",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"trucks"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Path Entity",
					"item": [
						{
							"name": "Test_Case_One",
							"item": [
								{
									"name": "Post_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_path\", responseJson.id);\r",
													"\r",
													"pm.collectionVariables.set(\"endingWarehouseId\", responseJson.endingWarehouseId);\r",
													"pm.collectionVariables.set(\"beginningWarehouseId\", responseJson.beginningWarehouseId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"   \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 13,\r",
													"    \"time\": 13,\r",
													"    \"distance\": 10,\r",
													"    \"chargingTime\": 33\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Path_By_WarehouseBeginning",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"beginningWarehouseId\":\"{{beginningWarehouseId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths/warehouseBeginning",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths",
												"warehouseBeginning"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 999,\r",
													"    \"time\": 999,\r",
													"    \"distance\": 12565,\r",
													"    \"chargingTime\": 999\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\",\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 12565,\r\n    \"energy\": 999,\r\n    \"time\": 999,\r\n    \"chargingTime\": 999\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Successfuly deleted path!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Two",
							"item": [
								{
									"name": "Post_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_path\", responseJson.id);\r",
													"\r",
													"pm.collectionVariables.set(\"endingWarehouseId\", responseJson.endingWarehouseId);\r",
													"pm.collectionVariables.set(\"beginningWarehouseId\", responseJson.beginningWarehouseId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"   \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 13,\r",
													"    \"time\": 13,\r",
													"    \"distance\": 10,\r",
													"    \"chargingTime\": 33\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Path_By_WarehouseEnding",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\":\"{{endingWarehouseId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths/warehouseBeginning",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths",
												"warehouseBeginning"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 999,\r",
													"    \"time\": 999,\r",
													"    \"distance\": 12565,\r",
													"    \"chargingTime\": 999\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\",\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 12565,\r\n    \"energy\": 999,\r\n    \"time\": 999,\r\n    \"chargingTime\": 999\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Successfuly deleted path!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Three",
							"item": [
								{
									"name": "Post_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_path\", responseJson.id);\r",
													"\r",
													"pm.collectionVariables.set(\"endingWarehouseId\", responseJson.endingWarehouseId);\r",
													"pm.collectionVariables.set(\"beginningWarehouseId\", responseJson.beginningWarehouseId);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"   \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 13,\r",
													"    \"time\": 13,\r",
													"    \"distance\": 10,\r",
													"    \"chargingTime\": 33\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_All_Paths",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\":\"{{endingWarehouseId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths/warehouseBeginning",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths",
												"warehouseBeginning"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.not.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_path\"),\r",
													"    \"endingWarehouseId\": \"231\",\r",
													"    \"beginningWarehouseId\": \"MJ7\",\r",
													"    \"energy\": 999,\r",
													"    \"time\": 999,\r",
													"    \"distance\": 12565,\r",
													"    \"chargingTime\": 999\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\",\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 12565,\r\n    \"energy\": 999,\r\n    \"time\": 999,\r\n    \"chargingTime\": 999\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Successfuly deleted path!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Four_Fail_Case",
							"item": [
								{
									"name": "Post_Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_path\", responseJson.id);\r",
													"pm.collectionVariables.set(\"endingWarehouseId\", responseJson.endingWarehouseId);\r",
													"pm.collectionVariables.set(\"beginningWarehouseId\", responseJson.beginningWarehouseId);\r",
													"\r",
													"pm.collectionVariables.set(\"id_path\", responseJson.id);\r",
													"pm.collectionVariables.set(\"endingWarehouseId_invalido\", \"0000000000\");\r",
													"pm.collectionVariables.set(\"beginningWarehouseId_invalido\", \"LASLDLASLDALS\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_Warehouse_Chegada",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Ending warehouse not found!\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"OOOP\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_Warehouse_Partida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Beginning warehouse not found!\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"OOOPS\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_Distance",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"pathDistance is not within range 1 to Infinity.\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": -10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_Energy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"pathEnergy is not within range 1 to Infinity.\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": -13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_Time",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"pathTime is not within range 1 to Infinity.\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": -13,\r\n    \"chargingTime\": 33\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Path_Invalid_ChargingTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"pathChargingTime is not within range 1 to Infinity.\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": -33\r\n\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Path_By_WarehouseBeginning_Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Get failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Nenhum path com esse armazém de partida foi encontrado!\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"beginningWarehouseId\":\"{{beginningWarehouseId_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths/warehouseBeginning",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths",
												"warehouseBeginning"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Path_By_WarehouseEnding_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Get failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Nenhum path com esse armazém de chegada foi encontrado!\"');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"endingWarehouseId\":\"{{endingWarehouseId_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths/warehouseEnding",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths",
												"warehouseEnding"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Path_Invalid_Warehouse_Chegada",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('The specified path was not found!');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\",\r\n   \"endingWarehouseId\": \"OOOP\",\r\n    \"beginningWarehouseId\": \"MJ7\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Path_Invalid_Warehouse_Partida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('The specified path was not found!');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\",\r\n    \"endingWarehouseId\": \"231\",\r\n    \"beginningWarehouseId\": \"OOOPS\",\r\n    \"distance\": 10,\r\n    \"energy\": 13,\r\n    \"time\": 13,\r\n    \"chargingTime\": 33\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Path_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Delete failed (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Successfuly deleted path!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"436e129d-2f50-4bbf-9995-bb1dfa850985\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/paths",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"paths"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Packaging Entity",
					"item": [
						{
							"name": "Test_Case_One",
							"item": [
								{
									"name": "Post_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_packaging\", responseJson.id);\r",
													"pm.collectionVariables.set(\"orderRef\", responseJson.orderRef);\r",
													"pm.collectionVariables.set(\"truckRef\", responseJson.truckRef);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/2\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Get With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/2\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/1\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"221228/1\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Two",
							"item": [
								{
									"name": "Post_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_packaging\", responseJson.id);\r",
													"pm.collectionVariables.set(\"orderRef\", responseJson.orderRef);\r",
													"pm.collectionVariables.set(\"truckRef\", responseJson.truckRef);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/2\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_By_Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"{{orderRef}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings/order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/1\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"221228/1\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Three",
							"item": [
								{
									"name": "Post_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_packaging\", responseJson.id);\r",
													"pm.collectionVariables.set(\"orderRef\", responseJson.orderRef);\r",
													"pm.collectionVariables.set(\"truckRef\", responseJson.truckRef);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/2\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_By_Truck",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"truckRef\": \"{{truckRef}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings/truck",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings",
												"truck"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/1\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"221228/1\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Four",
							"item": [
								{
									"name": "Post_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_packaging\", responseJson.id);\r",
													"pm.collectionVariables.set(\"orderRef\", responseJson.orderRef);\r",
													"pm.collectionVariables.set(\"truckRef\", responseJson.truckRef);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/2\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_All_Packagings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings/all",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With success (Verify body)\", function () {\r",
													"    pm.response.to.have.body(\r",
													"{\r",
													"    \"id\": pm.collectionVariables.get(\"id_packaging\"),\r",
													"    \"orderRef\": \"221228/1\",\r",
													"    \"truckRef\": \"E1234\"\r",
													"});\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"221228/1\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Test_Case_Five_Fail_Case",
							"item": [
								{
									"name": "Post_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"id_packaging\", responseJson.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Fail_Order_Inválida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"id_packaging_invalido\", \"59294c42-fff1-4b82-9cd6-43dd9c3f2b5d\");\r",
													"pm.collectionVariables.set(\"orderRef_invalido\", \"AAAAAAAAAAA\");\r",
													"pm.collectionVariables.set(\"truckRef_invalido\", \"AAAAAAA\");\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Order not found! Specified ID does not exist\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"AAAAAAAAAAAAAAAA/2\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post_Packaging_Camião_Inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Truck não foi encontrado! Specified plate does not exist\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"221228/2\",\r\n    \"truckRef\": \"AAAAAAAAAA\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_ID_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Get With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"Packaging not found!\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_By_Order_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Get With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"No packaging with that order was found!\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderRef\": \"{{orderRef_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings/order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Packaging_By_Truck_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 500ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Get With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"No packaging with that truck was found!\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"truckRef\": \"{{truckRef_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings/truck",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings",
												"truck"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging_Order_Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([404, 400]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Order not found! Specified ID does not exist'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"{{orderRef_invalido}}\",\r\n    \"truckRef\": \"E1234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put_Packaging_Camião_Invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([404, 400]);\r",
													"});\r",
													"\r",
													"pm.test(\"Put With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('Truck não foi encontrado! Specified plate does not exist'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"{{id_packaging}}\",\r\n    \"orderRef\": \"221228/1\",\r\n     \"truckRef\": \"{{truckRef_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging_Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 2000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Failed Delete request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
													"});\r",
													"\r",
													"pm.test(\"Post With failure message (Verify body)\", function () {\r",
													"    pm.response.to.have.body('\"The specified path was not found!\"'\r",
													"    );\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging_invalido}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete_Packaging",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\": \"{{id_packaging}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/api/packagings",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"api",
												"packagings"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "identifier",
			"value": ""
		},
		{
			"key": "id_order",
			"value": ""
		},
		{
			"key": "data_order",
			"value": ""
		},
		{
			"key": "warehouseId",
			"value": ""
		},
		{
			"key": "id_order_invalid",
			"value": ""
		},
		{
			"key": "identifier_invalido",
			"value": ""
		},
		{
			"key": "data_order_invalido",
			"value": ""
		},
		{
			"key": "warehouseId_invalido",
			"value": ""
		},
		{
			"key": "id_warehouse",
			"value": ""
		},
		{
			"key": "id_warehouse_domain",
			"value": ""
		},
		{
			"key": "designation",
			"value": ""
		},
		{
			"key": "id_warehouse_invalid",
			"value": ""
		},
		{
			"key": "id_warehouse_domain_invalido",
			"value": ""
		},
		{
			"key": "designation_invalido",
			"value": ""
		},
		{
			"key": "id_packaging",
			"value": ""
		},
		{
			"key": "orderRef",
			"value": ""
		},
		{
			"key": "truckRef",
			"value": ""
		},
		{
			"key": "id_packaging_invalido",
			"value": ""
		},
		{
			"key": "orderRef_invalido",
			"value": ""
		},
		{
			"key": "truckRef_invalido",
			"value": ""
		},
		{
			"key": "id_path",
			"value": ""
		},
		{
			"key": "endingWarehouseId",
			"value": ""
		},
		{
			"key": "beginningWarehouseId",
			"value": ""
		},
		{
			"key": "endingWarehouseId_invalido",
			"value": ""
		},
		{
			"key": "beginningWarehouseId_invalido",
			"value": ""
		},
		{
			"key": "id_truck",
			"value": ""
		},
		{
			"key": "carac_truck",
			"value": ""
		},
		{
			"key": "truckPlate",
			"value": ""
		},
		{
			"key": "id_truck_invalid",
			"value": ""
		},
		{
			"key": "carac_truck_invalid",
			"value": ""
		},
		{
			"key": "truckPlate_invalid",
			"value": ""
		}
	]
}